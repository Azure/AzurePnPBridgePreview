#pragma once
#include "Adapters/CmdAndPropHandler.h"

#define MODBUS_PROP_HANDLER(index) void CONC(PnpBridge_PropertyUpdateHandler, CONC(MODBUS_ADAPTER_NAME, index))(unsigned const char* propertyInitial, \
    size_t propertyInitialLen, unsigned const char* propertyDataUpdated, size_t propertyDataUpdatedLen, int desiredVersion, void* userContextCallback) \
    {MODBUS_PROP_HANDLER_ADAPTER_METHOD(index, propertyInitial, propertyInitialLen, propertyDataUpdated, propertyDataUpdatedLen, \
     desiredVersion, userContextCallback);};

MODBUS_PROP_HANDLER(0);
MODBUS_PROP_HANDLER(1);
MODBUS_PROP_HANDLER(2);
MODBUS_PROP_HANDLER(3);
MODBUS_PROP_HANDLER(4);
MODBUS_PROP_HANDLER(5);
MODBUS_PROP_HANDLER(6);
MODBUS_PROP_HANDLER(7);
MODBUS_PROP_HANDLER(8);
MODBUS_PROP_HANDLER(9);
MODBUS_PROP_HANDLER(10);
MODBUS_PROP_HANDLER(11);
MODBUS_PROP_HANDLER(12);
MODBUS_PROP_HANDLER(13);
MODBUS_PROP_HANDLER(14);
MODBUS_PROP_HANDLER(15);
MODBUS_PROP_HANDLER(16);
MODBUS_PROP_HANDLER(17);
MODBUS_PROP_HANDLER(18);
MODBUS_PROP_HANDLER(19);

#define MODBUS_PROP_HANDLER_METHOD(index) &CONC(PnpBridge_PropertyUpdateHandler, CONC(MODBUS_ADAPTER_NAME, index))

PropertyHandlersFunction MdobusPropertyHandlerTables[] = {
	MODBUS_PROP_HANDLER_METHOD(0),
	MODBUS_PROP_HANDLER_METHOD(1),
	MODBUS_PROP_HANDLER_METHOD(2),
	MODBUS_PROP_HANDLER_METHOD(3),
	MODBUS_PROP_HANDLER_METHOD(4),
	MODBUS_PROP_HANDLER_METHOD(5),
	MODBUS_PROP_HANDLER_METHOD(6),
	MODBUS_PROP_HANDLER_METHOD(7),
	MODBUS_PROP_HANDLER_METHOD(8),
	MODBUS_PROP_HANDLER_METHOD(9),
	MODBUS_PROP_HANDLER_METHOD(10),
	MODBUS_PROP_HANDLER_METHOD(11),
	MODBUS_PROP_HANDLER_METHOD(12),
	MODBUS_PROP_HANDLER_METHOD(13),
	MODBUS_PROP_HANDLER_METHOD(14),
	MODBUS_PROP_HANDLER_METHOD(15),
	MODBUS_PROP_HANDLER_METHOD(16),
	MODBUS_PROP_HANDLER_METHOD(17),
	MODBUS_PROP_HANDLER_METHOD(18),
	MODBUS_PROP_HANDLER_METHOD(19)
};

#define MODBUS_CMD_HANDLER(index) void CONC(PnpBridge_CommandUpdateHandler, CONC(MODBUS_ADAPTER_NAME, index))( \
    const PNP_CLIENT_COMMAND_REQUEST* pnpClientCommandContext, PNP_CLIENT_COMMAND_RESPONSE* pnpClientCommandResponseContext, void* userContextCallback) \
    {MODBUS_CMD_HANDLER_ADAPTER_METHOD(index, pnpClientCommandContext, pnpClientCommandResponseContext, userContextCallback);};

MODBUS_CMD_HANDLER(0);
MODBUS_CMD_HANDLER(1);
MODBUS_CMD_HANDLER(2);
MODBUS_CMD_HANDLER(3);
MODBUS_CMD_HANDLER(4);
MODBUS_CMD_HANDLER(5);
MODBUS_CMD_HANDLER(6);
MODBUS_CMD_HANDLER(7);
MODBUS_CMD_HANDLER(8);
MODBUS_CMD_HANDLER(9);
MODBUS_CMD_HANDLER(10);
MODBUS_CMD_HANDLER(11);
MODBUS_CMD_HANDLER(12);
MODBUS_CMD_HANDLER(13);
MODBUS_CMD_HANDLER(14);
MODBUS_CMD_HANDLER(15);
MODBUS_CMD_HANDLER(16);
MODBUS_CMD_HANDLER(17);
MODBUS_CMD_HANDLER(18);
MODBUS_CMD_HANDLER(19);

#define MODBUS_CMD_HANDLER_METHOD(index) &CONC(PnpBridge_CommandUpdateHandler, CONC(MODBUS_ADAPTER_NAME, index))

CommandHandlersFunction ModbusCommandHandlerTables[] = {
	MODBUS_CMD_HANDLER_METHOD(0),
	MODBUS_CMD_HANDLER_METHOD(1),
	MODBUS_CMD_HANDLER_METHOD(2),
	MODBUS_CMD_HANDLER_METHOD(3),
	MODBUS_CMD_HANDLER_METHOD(4),
	MODBUS_CMD_HANDLER_METHOD(5),
	MODBUS_CMD_HANDLER_METHOD(6),
	MODBUS_CMD_HANDLER_METHOD(7),
	MODBUS_CMD_HANDLER_METHOD(8),
	MODBUS_CMD_HANDLER_METHOD(9),
	MODBUS_CMD_HANDLER_METHOD(10),
	MODBUS_CMD_HANDLER_METHOD(11),
	MODBUS_CMD_HANDLER_METHOD(12),
	MODBUS_CMD_HANDLER_METHOD(13),
	MODBUS_CMD_HANDLER_METHOD(14),
	MODBUS_CMD_HANDLER_METHOD(15),
	MODBUS_CMD_HANDLER_METHOD(16),
	MODBUS_CMD_HANDLER_METHOD(17),
	MODBUS_CMD_HANDLER_METHOD(18),
	MODBUS_CMD_HANDLER_METHOD(19)
};
